# AXI4 VIP Regression Test Suite - Enhanced with Advanced Clock/Reset Features (v2.10)
# Total: 280+ test cases including:
#   - 117 standard AXI4 protocol tests
#   - 18 performance KPI tests
#   - 45 QoS/USER signal tests
#   - 50+ advanced clock/reset tests (independent control, dynamic frequency, gating)
#   - 50+ error injection/exception tests
# Features unified hdl_top.sv with independent clock/reset control per interface

#====================================================================================
# SECTION 1: STANDARD AXI4 TEST CASES (117 tests) 
# Core AXI4 protocol tests - excludes the 6 KPI testcases which are in Section 2
# Note: axi4_stress_reset_test runs with 3 bus matrix modes (NONE, 4x4, ENHANCED)
#====================================================================================

#------------------------------------------------------------------------------------
# Basic Transfer Tests (Blocking)
#------------------------------------------------------------------------------------
axi4_blocking_write_read_test run_cnt=2
axi4_blocking_write_read_rand_test run_cnt=2
axi4_blocking_cross_write_read_test run_cnt=2
axi4_blocking_outstanding_transfer_write_read_test run_cnt=2
axi4_blocking_unaligned_addr_write_read_test run_cnt=2
axi4_blocking_slave_error_write_read_test run_cnt=2

#------------------------------------------------------------------------------------
# Data Width Tests (Blocking)
#------------------------------------------------------------------------------------
axi4_blocking_8b_data_read_test run_cnt=2
axi4_blocking_8b_write_data_test run_cnt=2
axi4_blocking_8b_write_read_test run_cnt=2
axi4_blocking_16b_data_read_test run_cnt=2
axi4_blocking_16b_write_data_test run_cnt=2
axi4_blocking_16b_write_read_test run_cnt=2
axi4_blocking_32b_data_read_test run_cnt=2
axi4_blocking_32b_write_data_test run_cnt=2
axi4_blocking_32b_write_read_test run_cnt=2
axi4_blocking_64b_data_read_test run_cnt=2
axi4_blocking_64b_write_data_test run_cnt=2
axi4_blocking_64b_write_read_test run_cnt=2

#------------------------------------------------------------------------------------
# Burst Type Tests (Blocking)
#------------------------------------------------------------------------------------
axi4_blocking_incr_burst_read_test run_cnt=2
axi4_blocking_incr_burst_write_test run_cnt=2
axi4_blocking_incr_burst_write_read_test run_cnt=2
axi4_blocking_fixed_burst_write_read_test run_cnt=2
axi4_blocking_wrap_burst_read_test run_cnt=2
axi4_blocking_wrap_burst_write_test run_cnt=2
axi4_blocking_wrap_burst_write_read_test run_cnt=2

#------------------------------------------------------------------------------------
# Response Tests (Blocking)
#------------------------------------------------------------------------------------
axi4_blocking_okay_response_read_test run_cnt=2
axi4_blocking_okay_response_write_test run_cnt=2
axi4_blocking_okay_response_write_read_test run_cnt=2
axi4_blocking_exokay_response_read_test run_cnt=2
axi4_blocking_exokay_response_write_test run_cnt=2

#------------------------------------------------------------------------------------
# Basic Transfer Tests (Non-Blocking)
#------------------------------------------------------------------------------------
axi4_non_blocking_write_read_test run_cnt=2
axi4_non_blocking_write_read_rand_test run_cnt=2
axi4_non_blocking_cross_write_read_test run_cnt=2
axi4_non_blocking_outstanding_transfer_write_read_test run_cnt=2
axi4_non_blocking_unaligned_addr_write_read_test run_cnt=2
axi4_non_blocking_slave_error_write_read_test run_cnt=2
axi4_non_blocking_rand_incr_burst_write_test run_cnt=2

#------------------------------------------------------------------------------------
# Data Width Tests (Non-Blocking)
#------------------------------------------------------------------------------------
axi4_non_blocking_8b_data_read_test run_cnt=2
axi4_non_blocking_8b_write_data_test run_cnt=2
axi4_non_blocking_8b_write_read_test run_cnt=2
axi4_non_blocking_16b_data_read_test run_cnt=2
axi4_non_blocking_16b_write_data_test run_cnt=2
axi4_non_blocking_16b_write_read_test run_cnt=2
axi4_non_blocking_32b_data_read_test run_cnt=2
axi4_non_blocking_32b_write_data_test run_cnt=2
axi4_non_blocking_32b_write_read_test run_cnt=2
axi4_non_blocking_64b_data_read_test run_cnt=2
axi4_non_blocking_64b_write_data_test run_cnt=2
axi4_non_blocking_64b_write_read_test run_cnt=2

#------------------------------------------------------------------------------------
# Burst Type Tests (Non-Blocking)
#------------------------------------------------------------------------------------
axi4_non_blocking_incr_burst_read_test run_cnt=2
axi4_non_blocking_incr_burst_write_test run_cnt=2
axi4_non_blocking_incr_burst_write_read_test run_cnt=2
axi4_non_blocking_fixed_burst_write_read_test run_cnt=2
axi4_non_blocking_wrap_burst_read_test run_cnt=2
axi4_non_blocking_wrap_burst_write_test run_cnt=2
axi4_non_blocking_wrap_burst_write_read_test run_cnt=2

#------------------------------------------------------------------------------------
# Response & Ordering Tests (Non-Blocking)
#------------------------------------------------------------------------------------
axi4_non_blocking_okay_response_read_test run_cnt=2
axi4_non_blocking_okay_response_write_read_test run_cnt=2
axi4_non_blocking_okay_write_response_test run_cnt=2
axi4_non_blocking_exokay_response_read_test run_cnt=2
axi4_non_blocking_exokay_write_response_test run_cnt=2
axi4_non_blocking_only_read_response_out_of_order_test run_cnt=2
axi4_non_blocking_only_write_response_out_of_order_test run_cnt=2
axi4_non_blocking_write_read_response_out_of_order_test run_cnt=2

#------------------------------------------------------------------------------------
# Slave Memory Mode Tests (Non-Blocking)
#------------------------------------------------------------------------------------
axi4_non_blocking_slave_mem_mode_fixed_burst_write_read_test run_cnt=2
axi4_non_blocking_slave_mem_mode_incr_burst_write_read_test run_cnt=2
axi4_non_blocking_slave_mem_mode_wrap_burst_write_read_test run_cnt=2

#------------------------------------------------------------------------------------
# Boundary Tests
#------------------------------------------------------------------------------------
axi4_4k_boundary_cross_test run_cnt=2
axi4_lower_boundary_read_test run_cnt=2
axi4_lower_boundary_write_test run_cnt=2
axi4_upper_boundary_read_test run_cnt=2
axi4_upper_boundary_write_test run_cnt=2
axi4_unaligned_access_test run_cnt=2

#------------------------------------------------------------------------------------
# Concurrent & Stress Tests
#------------------------------------------------------------------------------------
axi4_concurrent_reads_test run_cnt=2
axi4_concurrent_writes_raw_test run_cnt=2
axi4_concurrent_error_stress_test run_cnt=2
axi4_exhaustive_random_reads_test run_cnt=2
axi4_sequential_mixed_ops_test run_cnt=2

# Stress Reset Test with 3 Bus Matrix Modes
axi4_stress_reset_test run_cnt=2 command_add=+BUS_MATRIX_MODE=NONE
axi4_stress_reset_test run_cnt=2 command_add=+BUS_MATRIX_MODE=4x4
axi4_stress_reset_test run_cnt=2 command_add=+BUS_MATRIX_MODE=ENHANCED

#------------------------------------------------------------------------------------
# Bus Matrix Tests
#------------------------------------------------------------------------------------
axi4_enhanced_bus_matrix_test run_cnt=2
axi4_all_master_slave_access_test run_cnt=2

#------------------------------------------------------------------------------------
# Exclusive Access Tests
#------------------------------------------------------------------------------------
axi4_exclusive_read_fail_test run_cnt=2
axi4_exclusive_read_success_test run_cnt=2
axi4_exclusive_write_fail_test run_cnt=2
axi4_exclusive_write_success_test run_cnt=2

#------------------------------------------------------------------------------------
# ID Tests
#------------------------------------------------------------------------------------
axi4_id_multiple_reads_different_arid_test run_cnt=2
axi4_id_multiple_reads_same_arid_test run_cnt=2
axi4_id_multiple_writes_different_awid_test run_cnt=2
axi4_id_multiple_writes_same_awid_test run_cnt=2
axi4_wid_awid_mismatch_test run_cnt=2

#------------------------------------------------------------------------------------
# QoS Tests with 3 Bus Matrix Modes
#------------------------------------------------------------------------------------
# NONE Mode (no ref model, 4x4 topology)
axi4_qos_basic_priority_test run_cnt=2 command_add=+BUS_MATRIX_MODE=NONE
axi4_qos_equal_priority_fairness_test run_cnt=2 command_add=+BUS_MATRIX_MODE=NONE
axi4_qos_saturation_stress_test run_cnt=2 command_add=+BUS_MATRIX_MODE=NONE
axi4_qos_starvation_prevention_test run_cnt=2 command_add=+BUS_MATRIX_MODE=NONE
axi4_qos_with_user_priority_boost_test run_cnt=2 command_add=+BUS_MATRIX_MODE=NONE
axi4_non_blocking_qos_write_read_test run_cnt=2 command_add=+BUS_MATRIX_MODE=NONE
axi4_user_based_qos_routing_test run_cnt=2 command_add="+BUS_MATRIX_MODE=NONE +define+DISABLE_X_ASSERTIONS"
axi4_qos_region_routing_reset_backpressure_test run_cnt=2 command_add=+BUS_MATRIX_MODE=NONE

# BASE Mode (4x4 with ref model)
axi4_qos_basic_priority_test run_cnt=2 command_add=+BUS_MATRIX_MODE=4x4
axi4_qos_equal_priority_fairness_test run_cnt=2 command_add=+BUS_MATRIX_MODE=4x4
axi4_qos_saturation_stress_test run_cnt=2 command_add=+BUS_MATRIX_MODE=4x4
axi4_qos_starvation_prevention_test run_cnt=2 command_add=+BUS_MATRIX_MODE=4x4
axi4_qos_with_user_priority_boost_test run_cnt=2 command_add=+BUS_MATRIX_MODE=4x4
axi4_non_blocking_qos_write_read_test run_cnt=2 command_add=+BUS_MATRIX_MODE=4x4
axi4_user_based_qos_routing_test run_cnt=2 command_add="+BUS_MATRIX_MODE=4x4 +define+DISABLE_X_ASSERTIONS"
axi4_qos_region_routing_reset_backpressure_test run_cnt=2 command_add=+BUS_MATRIX_MODE=4x4

# ENHANCED Mode (10x10 with ref model)
axi4_qos_basic_priority_test run_cnt=2 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_qos_equal_priority_fairness_test run_cnt=2 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_qos_saturation_stress_test run_cnt=2 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_qos_starvation_prevention_test run_cnt=2 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_qos_with_user_priority_boost_test run_cnt=2 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_non_blocking_qos_write_read_test run_cnt=2 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_user_based_qos_routing_test run_cnt=2 command_add="+BUS_MATRIX_MODE=ENHANCED +define+DISABLE_X_ASSERTIONS"
axi4_qos_region_routing_reset_backpressure_test run_cnt=2 command_add=+BUS_MATRIX_MODE=ENHANCED

#------------------------------------------------------------------------------------
# USER Signal Tests with 3 Bus Matrix Modes
#------------------------------------------------------------------------------------
# NONE Mode (no ref model, 4x4 topology)
axi4_user_parity_protection_test run_cnt=2 command_add=+BUS_MATRIX_MODE=NONE
axi4_user_security_tagging_test run_cnt=2 command_add=+BUS_MATRIX_MODE=NONE
axi4_user_signal_corruption_test run_cnt=2 command_add=+BUS_MATRIX_MODE=NONE
axi4_user_signal_passthrough_test run_cnt=2 command_add=+BUS_MATRIX_MODE=NONE
axi4_user_signal_protocol_violation_test run_cnt=2 command_add=+BUS_MATRIX_MODE=NONE
axi4_user_signal_width_mismatch_test run_cnt=2 command_add=+BUS_MATRIX_MODE=NONE
axi4_user_transaction_tracing_test run_cnt=2 command_add=+BUS_MATRIX_MODE=NONE

# BASE Mode (4x4 with ref model)
axi4_user_parity_protection_test run_cnt=2 command_add=+BUS_MATRIX_MODE=4x4
axi4_user_security_tagging_test run_cnt=2 command_add=+BUS_MATRIX_MODE=4x4
axi4_user_signal_corruption_test run_cnt=2 command_add=+BUS_MATRIX_MODE=4x4
axi4_user_signal_passthrough_test run_cnt=2 command_add=+BUS_MATRIX_MODE=4x4
axi4_user_signal_protocol_violation_test run_cnt=2 command_add=+BUS_MATRIX_MODE=4x4
axi4_user_signal_width_mismatch_test run_cnt=2 command_add=+BUS_MATRIX_MODE=4x4
axi4_user_transaction_tracing_test run_cnt=2 command_add=+BUS_MATRIX_MODE=4x4

# ENHANCED Mode (10x10 with ref model)
axi4_user_parity_protection_test run_cnt=2 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_user_security_tagging_test run_cnt=2 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_user_signal_corruption_test run_cnt=2 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_user_signal_passthrough_test run_cnt=2 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_user_signal_protocol_violation_test run_cnt=2 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_user_signal_width_mismatch_test run_cnt=2 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_user_transaction_tracing_test run_cnt=2 command_add=+BUS_MATRIX_MODE=ENHANCED

#------------------------------------------------------------------------------------
# Ready/Valid Handshake Tests
#------------------------------------------------------------------------------------
axi4_ar_ready_delay_test run_cnt=2
axi4_aw_ready_delay_test run_cnt=2
axi4_b_ready_delay_test run_cnt=2
axi4_r_ready_delay_test run_cnt=2
axi4_w_ready_delay_test run_cnt=2
axi4_aw_w_channel_separation_test run_cnt=2

#------------------------------------------------------------------------------------
# Protocol Violation Tests
#------------------------------------------------------------------------------------
axi4_arlen_out_of_spec_test run_cnt=2
axi4_awlen_out_of_spec_test run_cnt=2
axi4_wlast_too_early_test run_cnt=2
axi4_wlast_too_late_test run_cnt=2

#------------------------------------------------------------------------------------
# WSTRB Tests
#------------------------------------------------------------------------------------
axi4_wstrb_all_ones_test run_cnt=2
axi4_wstrb_all_zero_test run_cnt=2
axi4_wstrb_alternating_test run_cnt=2
axi4_wstrb_illegal_test run_cnt=2
axi4_wstrb_lower_half_test run_cnt=2
axi4_wstrb_upper_half_test run_cnt=2
axi4_wstrb_random_burst_test run_cnt=2
axi4_wstrb_single_bit_test run_cnt=2

#------------------------------------------------------------------------------------
# Width Configuration Tests
#------------------------------------------------------------------------------------
axi4_width_check_test run_cnt=2
axi4_width_config_test run_cnt=2

#------------------------------------------------------------------------------------
# Basic Read/Write Tests
#------------------------------------------------------------------------------------
axi4_read_test run_cnt=2
axi4_write_read_test run_cnt=2

#------------------------------------------------------------------------------------
# Configuration & Smoke Tests
#------------------------------------------------------------------------------------
axi4_smoke_test_enhanced run_cnt=2

#====================================================================================
# SECTION 2: PERFORMANCE KPI TESTS (18 tests = 6 KPI tests × 3 modes)
# These 6 KPI testcases from axi_stress_reset_test.md run across 3 bus matrix modes
#====================================================================================

# GROUP A: NONE MATRIX MODE TESTS (6 KPI tests - 1x1 topology)
# Tests the 6 KPI testcases without bus matrix complexity

axi4_saturation_midburst_reset_qos_boundary_test run_cnt=5
axi4_throughput_ordering_longtail_throttled_write_test run_cnt=5
axi4_qos_region_routing_reset_backpressure_test run_cnt=5
axi4_hotspot_fairness_boundary_error_reset_backpressure_test run_cnt=5
axi4_write_heavy_midburst_reset_rw_contention_test run_cnt=5
axi4_stability_burnin_longtail_backpressure_error_recovery_test run_cnt=5

# GROUP B: BASE MATRIX MODE TESTS (6 KPI tests - 4x4 topology)
# Tests the 6 KPI testcases with 4x4 bus matrix functionality

axi4_saturation_midburst_reset_qos_boundary_test run_cnt=5 command_add=+define+RUN_4X4_CONFIG
axi4_throughput_ordering_longtail_throttled_write_test run_cnt=5 command_add=+define+RUN_4X4_CONFIG
axi4_qos_region_routing_reset_backpressure_test run_cnt=5 command_add=+define+RUN_4X4_CONFIG
axi4_hotspot_fairness_boundary_error_reset_backpressure_test run_cnt=5 command_add=+define+RUN_4X4_CONFIG
axi4_write_heavy_midburst_reset_rw_contention_test run_cnt=5 command_add=+define+RUN_4X4_CONFIG
axi4_stability_burnin_longtail_backpressure_error_recovery_test run_cnt=5 command_add=+define+RUN_4X4_CONFIG

# GROUP C: ENHANCED MATRIX MODE TESTS (6 KPI tests - 10x10 topology)
# Tests the 6 KPI testcases with enhanced 10x10 bus matrix and comprehensive KPI measurements

axi4_saturation_midburst_reset_qos_boundary_test run_cnt=5 command_add=+define+RUN_10X10_CONFIG +define+BUS_MATRIX_10X10
axi4_throughput_ordering_longtail_throttled_write_test run_cnt=5 command_add=+define+RUN_10X10_CONFIG +define+BUS_MATRIX_10X10
axi4_qos_region_routing_reset_backpressure_test run_cnt=5 command_add=+define+RUN_10X10_CONFIG +define+BUS_MATRIX_10X10
axi4_hotspot_fairness_boundary_error_reset_backpressure_test run_cnt=5 command_add=+define+RUN_10X10_CONFIG +define+BUS_MATRIX_10X10
axi4_write_heavy_midburst_reset_rw_contention_test run_cnt=5 command_add=+define+RUN_10X10_CONFIG +define+BUS_MATRIX_10X10
axi4_stability_burnin_longtail_backpressure_error_recovery_test run_cnt=5 command_add=+define+RUN_10X10_CONFIG +define+BUS_MATRIX_10X10

#====================================================================================
# PERFORMANCE METRICS & KPI REQUIREMENTS
#====================================================================================
# All tests automatically measure and report the following 6 KPIs per axi_stress_reset_test.md:
# 1. Throughput (GB/s) - Write/Read/Combined throughput measurements
# 2. Latency Distribution (p50/p95/p99) - Transaction latency percentiles  
# 3. Retry Rate (%) - Percentage of retried transactions
# 4. Reset Recovery Time - Time to recover from reset events
# 5. Error Isolation Rate (%) - Percentage of errors properly isolated
# 6. Arbitration Fairness - Jain's fairness index for bus matrix arbitration
#
# ACCEPTANCE CRITERIA:
# - Pass: Protocol Checker 0 error, no deadlock/livelock, scoreboard 100% consistency
# - KPI: All 6 metrics measured and reported in test output  
#====================================================================================

#------------------------------------------------------------------------------------
# Error Injection and Exception Handling Tests with 3 Bus Matrix Modes
# Based on error_inject_exception_scenarios_tests.md specification
#------------------------------------------------------------------------------------

# Error Injection Tests - Master X Value Injection (6 tests × 3 modes = 18 tests)
# NONE Mode (no ref model, 4x4 topology)
axi4_error_inject_awvalid_x_test run_cnt=2 command_add=+BUS_MATRIX_MODE=NONE
axi4_error_inject_awaddr_x_test run_cnt=2 command_add=+BUS_MATRIX_MODE=NONE
axi4_error_inject_wdata_x_test run_cnt=2 command_add=+BUS_MATRIX_MODE=NONE
axi4_error_inject_arvalid_x_test run_cnt=2 command_add=+BUS_MATRIX_MODE=NONE
axi4_error_inject_bready_x_test run_cnt=2 command_add=+BUS_MATRIX_MODE=NONE
axi4_error_inject_rready_x_test run_cnt=2 command_add=+BUS_MATRIX_MODE=NONE

# BASE Mode (4x4 with ref model)
axi4_error_inject_awvalid_x_test run_cnt=2 command_add=+BUS_MATRIX_MODE=4x4
axi4_error_inject_awaddr_x_test run_cnt=2 command_add=+BUS_MATRIX_MODE=4x4
axi4_error_inject_wdata_x_test run_cnt=2 command_add=+BUS_MATRIX_MODE=4x4
axi4_error_inject_arvalid_x_test run_cnt=2 command_add=+BUS_MATRIX_MODE=4x4
axi4_error_inject_bready_x_test run_cnt=2 command_add=+BUS_MATRIX_MODE=4x4
axi4_error_inject_rready_x_test run_cnt=2 command_add=+BUS_MATRIX_MODE=4x4

# ENHANCED Mode (10x10 with ref model)
axi4_error_inject_awvalid_x_test run_cnt=2 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_error_inject_awaddr_x_test run_cnt=2 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_error_inject_wdata_x_test run_cnt=2 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_error_inject_arvalid_x_test run_cnt=2 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_error_inject_bready_x_test run_cnt=2 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_error_inject_rready_x_test run_cnt=2 command_add=+BUS_MATRIX_MODE=ENHANCED

# Error Injection Tests - Slave X Value Injection (4 tests × 3 modes = 12 tests)
# NONE Mode (no ref model, 4x4 topology)
axi4_slave_inject_bvalid_x_test run_cnt=2 command_add=+BUS_MATRIX_MODE=NONE
axi4_slave_inject_bresp_x_test run_cnt=2 command_add=+BUS_MATRIX_MODE=NONE
axi4_slave_inject_rvalid_x_test run_cnt=2 command_add=+BUS_MATRIX_MODE=NONE
axi4_slave_inject_rdata_x_test run_cnt=2 command_add=+BUS_MATRIX_MODE=NONE

# BASE Mode (4x4 with ref model)
axi4_slave_inject_bvalid_x_test run_cnt=2 command_add=+BUS_MATRIX_MODE=4x4
axi4_slave_inject_bresp_x_test run_cnt=2 command_add=+BUS_MATRIX_MODE=4x4
axi4_slave_inject_rvalid_x_test run_cnt=2 command_add=+BUS_MATRIX_MODE=4x4
axi4_slave_inject_rdata_x_test run_cnt=2 command_add=+BUS_MATRIX_MODE=4x4

# ENHANCED Mode (10x10 with ref model)
axi4_slave_inject_bvalid_x_test run_cnt=2 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_slave_inject_bresp_x_test run_cnt=2 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_slave_inject_rvalid_x_test run_cnt=2 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_slave_inject_rdata_x_test run_cnt=2 command_add=+BUS_MATRIX_MODE=ENHANCED

# Exception Handling Tests - Protocol Violations (6 tests × 3 modes = 18 tests)
# NONE Mode (no ref model, 4x4 topology)
axi4_exception_abort_awvalid_test run_cnt=2 command_add=+BUS_MATRIX_MODE=NONE
axi4_exception_abort_arvalid_test run_cnt=2 command_add=+BUS_MATRIX_MODE=NONE
axi4_exception_near_timeout_test run_cnt=2 command_add=+BUS_MATRIX_MODE=NONE
axi4_exception_illegal_access_test run_cnt=2 command_add=+BUS_MATRIX_MODE=NONE
axi4_exception_ecc_error_test run_cnt=2 command_add=+BUS_MATRIX_MODE=NONE
axi4_exception_special_reg_test run_cnt=2 command_add=+BUS_MATRIX_MODE=NONE

# BASE Mode (4x4 with ref model)
axi4_exception_abort_awvalid_test run_cnt=2 command_add=+BUS_MATRIX_MODE=4x4
axi4_exception_abort_arvalid_test run_cnt=2 command_add=+BUS_MATRIX_MODE=4x4
axi4_exception_near_timeout_test run_cnt=2 command_add=+BUS_MATRIX_MODE=4x4
axi4_exception_illegal_access_test run_cnt=2 command_add=+BUS_MATRIX_MODE=4x4
axi4_exception_ecc_error_test run_cnt=2 command_add=+BUS_MATRIX_MODE=4x4
axi4_exception_special_reg_test run_cnt=2 command_add=+BUS_MATRIX_MODE=4x4

# ENHANCED Mode (10x10 with ref model)
axi4_exception_abort_awvalid_test run_cnt=2 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_exception_abort_arvalid_test run_cnt=2 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_exception_near_timeout_test run_cnt=2 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_exception_illegal_access_test run_cnt=2 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_exception_ecc_error_test run_cnt=2 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_exception_special_reg_test run_cnt=2 command_add=+BUS_MATRIX_MODE=ENHANCED

#------------------------------------------------------------------------------------
# Randomized Error Injection Tests (9 tests × 3 modes = 27 tests)
# Tests with randomized X-value injection parameters (1-10 injections, 5-20 cycles duration)
#------------------------------------------------------------------------------------
# NONE Mode (no ref model, 4x4 topology)
axi4_error_inject_awvalid_random_test run_cnt=3 command_add=+BUS_MATRIX_MODE=NONE
axi4_error_inject_arvalid_random_test run_cnt=3 command_add=+BUS_MATRIX_MODE=NONE
axi4_error_inject_awaddr_random_test run_cnt=3 command_add=+BUS_MATRIX_MODE=NONE
axi4_error_inject_wdata_random_test run_cnt=3 command_add=+BUS_MATRIX_MODE=NONE
axi4_error_inject_bready_random_test run_cnt=3 command_add=+BUS_MATRIX_MODE=NONE
axi4_error_inject_rready_random_test run_cnt=3 command_add=+BUS_MATRIX_MODE=NONE
axi4_error_inject_multi_signal_random_test run_cnt=3 command_add=+BUS_MATRIX_MODE=NONE
axi4_error_inject_adaptive_random_test run_cnt=3 command_add=+BUS_MATRIX_MODE=NONE
axi4_exception_random_test run_cnt=3 command_add=+BUS_MATRIX_MODE=NONE

# BASE Mode (4x4 with ref model)
axi4_error_inject_awvalid_random_test run_cnt=3 command_add=+BUS_MATRIX_MODE=4x4
axi4_error_inject_arvalid_random_test run_cnt=3 command_add=+BUS_MATRIX_MODE=4x4
axi4_error_inject_awaddr_random_test run_cnt=3 command_add=+BUS_MATRIX_MODE=4x4
axi4_error_inject_wdata_random_test run_cnt=3 command_add=+BUS_MATRIX_MODE=4x4
axi4_error_inject_bready_random_test run_cnt=3 command_add=+BUS_MATRIX_MODE=4x4
axi4_error_inject_rready_random_test run_cnt=3 command_add=+BUS_MATRIX_MODE=4x4
axi4_error_inject_multi_signal_random_test run_cnt=3 command_add=+BUS_MATRIX_MODE=4x4
axi4_error_inject_adaptive_random_test run_cnt=3 command_add=+BUS_MATRIX_MODE=4x4
axi4_exception_random_test run_cnt=3 command_add=+BUS_MATRIX_MODE=4x4

# ENHANCED Mode (10x10 with ref model)
axi4_error_inject_awvalid_random_test run_cnt=3 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_error_inject_arvalid_random_test run_cnt=3 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_error_inject_awaddr_random_test run_cnt=3 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_error_inject_wdata_random_test run_cnt=3 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_error_inject_bready_random_test run_cnt=3 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_error_inject_rready_random_test run_cnt=3 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_error_inject_multi_signal_random_test run_cnt=3 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_error_inject_adaptive_random_test run_cnt=3 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_exception_random_test run_cnt=3 command_add=+BUS_MATRIX_MODE=ENHANCED

#------------------------------------------------------------------------------------
# Multi-injection Tests (2 tests × 3 modes = 6 tests)
# Multiple X injections (1-20 times) at random times throughout simulation
#------------------------------------------------------------------------------------
# NONE Mode (no ref model, 4x4 topology)
axi4_error_inject_multi_random_test run_cnt=5 command_add=+BUS_MATRIX_MODE=NONE
axi4_error_inject_continuous_random_test run_cnt=3 command_add=+BUS_MATRIX_MODE=NONE

# BASE Mode (4x4 with ref model)
axi4_error_inject_multi_random_test run_cnt=5 command_add=+BUS_MATRIX_MODE=4x4
axi4_error_inject_continuous_random_test run_cnt=3 command_add=+BUS_MATRIX_MODE=4x4

# ENHANCED Mode (10x10 with ref model)
axi4_error_inject_multi_random_test run_cnt=5 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_error_inject_continuous_random_test run_cnt=3 command_add=+BUS_MATRIX_MODE=ENHANCED

#------------------------------------------------------------------------------------
# Enhanced Exception Tests (4 tests × 3 modes = 12 tests)
# Advanced exception handling with multiple events and random parameters
#------------------------------------------------------------------------------------
# NONE Mode (no ref model, 4x4 topology)
axi4_exception_multi_abort_test run_cnt=5 command_add=+BUS_MATRIX_MODE=NONE
axi4_exception_continuous_abort_test run_cnt=3 command_add=+BUS_MATRIX_MODE=NONE
axi4_exception_random_timeout_test run_cnt=3 command_add=+BUS_MATRIX_MODE=NONE
axi4_exception_mixed_random_test run_cnt=5 command_add=+BUS_MATRIX_MODE=NONE

# BASE Mode (4x4 with ref model)
axi4_exception_multi_abort_test run_cnt=5 command_add=+BUS_MATRIX_MODE=4x4
axi4_exception_continuous_abort_test run_cnt=3 command_add=+BUS_MATRIX_MODE=4x4
axi4_exception_random_timeout_test run_cnt=3 command_add=+BUS_MATRIX_MODE=4x4
axi4_exception_mixed_random_test run_cnt=5 command_add=+BUS_MATRIX_MODE=4x4

# ENHANCED Mode (10x10 with ref model)
axi4_exception_multi_abort_test run_cnt=5 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_exception_continuous_abort_test run_cnt=3 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_exception_random_timeout_test run_cnt=3 command_add=+BUS_MATRIX_MODE=ENHANCED
axi4_exception_mixed_random_test run_cnt=5 command_add=+BUS_MATRIX_MODE=ENHANCED

#====================================================================================
# SECTION: ADVANCED CLOCK AND RESET TESTS (v2.10 - Unified hdl_top)
# Comprehensive tests utilizing new independent clock/reset control features
#====================================================================================

#------------------------------------------------------------------------------------
# 1. DYNAMIC CLOCK FREQUENCY TESTS
# Tests clock frequency scaling during active transfers (0.5x to 3.0x)
# Verifies data integrity and protocol compliance during frequency changes
#------------------------------------------------------------------------------------
axi4_exception_clk_freq_change_test run_cnt=5 command_add=+BUS_MATRIX_MODE=NONE
axi4_exception_clk_freq_change_test run_cnt=5 command_add=+BUS_MATRIX_MODE=4x4
axi4_exception_clk_freq_change_test run_cnt=5 command_add=+BUS_MATRIX_MODE=ENHANCED

#------------------------------------------------------------------------------------
# 2. CONTINUOUS CLOCK VARIATION STRESS TEST
# Constant frequency changes with 5-30% probability per transaction
# Tests system stability under extreme clock variations
#------------------------------------------------------------------------------------
axi4_exception_continuous_clk_change_test run_cnt=3 command_add=+BUS_MATRIX_MODE=NONE
axi4_exception_continuous_clk_change_test run_cnt=3 command_add=+BUS_MATRIX_MODE=4x4
axi4_exception_continuous_clk_change_test run_cnt=3 command_add=+BUS_MATRIX_MODE=ENHANCED

#------------------------------------------------------------------------------------
# 3. INDEPENDENT RESET CONTROL TESTS
# Tests per-interface reset control - ALL masters and slaves are tested individually
# Includes simultaneous reset testing and global reset
# Now supports all bus matrix modes!
#------------------------------------------------------------------------------------
# NONE mode - with transactions and comprehensive reset testing
axi4_independent_reset_test run_cnt=3 command_add="+BUS_MATRIX_MODE=NONE +define+DISABLE_X_ASSERTIONS"

# BASE_BUS_MATRIX mode - reset-only testing (transactions disabled)
axi4_independent_reset_test run_cnt=2 command_add="+BUS_MATRIX_MODE=4x4 +define+DISABLE_X_ASSERTIONS"

# ENHANCED mode - reset-only testing (transactions disabled)  
axi4_independent_reset_test run_cnt=2 command_add="+BUS_MATRIX_MODE=ENHANCED +define+DISABLE_X_ASSERTIONS"

#------------------------------------------------------------------------------------
# 4. RESET DURING ACTIVE TRANSFERS
# Tests reset injection during ongoing transactions (1-8 reset events)
# Verifies transfer abandonment and recovery mechanisms
#------------------------------------------------------------------------------------
axi4_exception_reset_terminate_test run_cnt=5 command_add="+BUS_MATRIX_MODE=NONE +define+DISABLE_X_ASSERTIONS"
axi4_exception_reset_terminate_test run_cnt=5 command_add="+BUS_MATRIX_MODE=4x4 +define+DISABLE_X_ASSERTIONS"
axi4_exception_reset_terminate_test run_cnt=5 command_add="+BUS_MATRIX_MODE=ENHANCED +define+DISABLE_X_ASSERTIONS"

#------------------------------------------------------------------------------------
# 5. COMPREHENSIVE RESET TEST (5-20 random reset events)
# Tests all critical reset scenarios:
# - Transfer abandonment during reset
# - System recovery after reset
# - Protocol compliance during reset events
# - Mid-burst reset handling
# - Multiple consecutive reset events
#------------------------------------------------------------------------------------
axi4_reset_comprehensive_test run_cnt=5 command_add="+BUS_MATRIX_MODE=NONE +define+DISABLE_X_ASSERTIONS"
axi4_reset_comprehensive_test run_cnt=5 command_add="+BUS_MATRIX_MODE=4x4 +define+DISABLE_X_ASSERTIONS"
axi4_reset_comprehensive_test run_cnt=5 command_add="+BUS_MATRIX_MODE=ENHANCED +define+DISABLE_X_ASSERTIONS"

#------------------------------------------------------------------------------------
# 6. COMBINED CLOCK & RESET EXCEPTION TESTS
# Simultaneous clock frequency changes and reset events
# Most stressful scenario - tests complete system resilience
#------------------------------------------------------------------------------------
axi4_exception_clk_reset_combined_test run_cnt=5 command_add="+BUS_MATRIX_MODE=NONE +define+DISABLE_X_ASSERTIONS"
axi4_exception_clk_reset_combined_test run_cnt=5 command_add="+BUS_MATRIX_MODE=4x4 +define+DISABLE_X_ASSERTIONS"
axi4_exception_clk_reset_combined_test run_cnt=5 command_add="+BUS_MATRIX_MODE=ENHANCED +define+DISABLE_X_ASSERTIONS"

#------------------------------------------------------------------------------------
# 7. CLOCK GATING TESTS
# Tests clock stop/start functionality during idle and active periods
#------------------------------------------------------------------------------------
axi4_exception_clk_gating_test run_cnt=3 command_add=+BUS_MATRIX_MODE=NONE
axi4_exception_clk_gating_test run_cnt=3 command_add=+BUS_MATRIX_MODE=4x4
axi4_exception_clk_gating_test run_cnt=3 command_add=+BUS_MATRIX_MODE=ENHANCED

#------------------------------------------------------------------------------------
# 8. BASIC RESET AND CLOCK DEMO TESTS
# Simple demonstrations of clock/reset features for debugging
#------------------------------------------------------------------------------------
axi4_simple_clk_reset_demo_test run_cnt=1 command_add="+define+DISABLE_X_ASSERTIONS"
axi4_basic_reset_test run_cnt=1 command_add="+define+DISABLE_X_ASSERTIONS"
axi4_simple_multi_reset_test run_cnt=1 command_add="+define+DISABLE_X_ASSERTIONS"

# Test execution notes:
# - Total test cases: 272 (117 standard + 18 performance KPI + 45 QoS/USER + 92 error injection/exception/clock/reset)
# - Standard tests run 2 iterations each for reliability
# - axi4_stress_reset_test runs across 3 bus matrix modes (NONE, 4x4, ENHANCED)
# - Performance KPI tests run 5 iterations each for statistical accuracy
# - QoS and USER tests run 2 iterations each across 3 bus matrix modes (NONE, BASE 4x4, ENHANCED 10x10)
# - Error injection and exception tests run 2 iterations each across 3 bus matrix modes for robustness testing
# - Randomized error injection tests run 3 iterations each with:
#   * Random injection count: 1-10 times per test
#   * Random duration: 5-20 cycles per injection
#   * Random delays: 50-500ns between injections
#   * All 6 AXI4 signals covered: AWVALID, ARVALID, AWADDR, WDATA, BREADY, RREADY
# - Multi-injection tests run 3-5 iterations each for comprehensive scenario coverage
# - Enhanced exception tests run 3-5 iterations each for thorough exception handling validation
# - Clock and reset exception tests run 3-5 iterations each for timing and recovery validation
# - All tests include comprehensive performance metrics collection via axi4_performance_metrics.sv
# - Results automatically sorted into pass/fail categories with detailed KPI reports
