#!/bin/bash
#==============================================================================
# Demonstration of Enhanced UVM Debug Features
# Shows the new debug capabilities added to the VIP simulations
#==============================================================================

echo "==================================================================="
echo "Enhanced UVM Debug Features Demo"
echo "==================================================================="
echo ""
echo "The following enhanced debug features have been added to all VIP simulations:"
echo ""

echo "1. DEBUG LEVELS (0-4)"
echo "   - Level 0: No debug (default)"
echo "   - Level 1: Basic debug (+AXI4_DEBUG_BASIC)"
echo "   - Level 2: Transaction debug (+AXI4_DEBUG_TRANSACTION)"
echo "   - Level 3: Protocol debug (+AXI4_DEBUG_PROTOCOL)"
echo "   - Level 4: Full debug (+AXI4_DEBUG_SCOREBOARD)"
echo ""
echo "   Example usage:"
echo "   make run DEBUG_LEVEL=2"
echo ""

echo "2. UVM DEBUG TRACES"
echo "   - Configuration database trace: +UVM_CONFIG_DB_TRACE"
echo "   - Objection trace: +UVM_OBJECTION_TRACE"
echo "   - Phase trace: +UVM_PHASE_TRACE"
echo "   - Resource database trace: +UVM_RESOURCE_DB_TRACE"
echo ""
echo "   Example usage:"
echo "   make run UVM_DEBUG=1"
echo ""

echo "3. TRANSACTION RECORDING"
echo "   - Enable transaction recording: +UVM_TR_RECORD"
echo "   - Enable log recording: +UVM_LOG_RECORD"
echo ""
echo "   Example usage:"
echo "   make run TRANS_RECORD=1"
echo ""

echo "4. PERFORMANCE MONITORING"
echo "   - Enable performance metrics collection"
echo "   - Reports generated in reports/ directory"
echo ""
echo "   Example usage:"
echo "   make run_perf"
echo ""

echo "5. COVERAGE COLLECTION"
echo "   - Line, condition, FSM, toggle, branch, assertion coverage"
echo "   - Coverage reports in coverage/ directory"
echo ""
echo "   Example usage:"
echo "   make run_cov"
echo ""

echo "6. WAVEFORM DUMPING"
echo "   - FSDB format (for Verdi): DUMP_FSDB=1"
echo "   - VCD format (for GTKWave): DUMP_VCD=1"
echo ""
echo "   Example usage:"
echo "   make run_fsdb"
echo "   make verdi"
echo ""

echo "7. NEW DEBUG TARGETS"
echo "   - make debug_basic    : Run with basic debug"
echo "   - make debug_trans    : Run with transaction debug"
echo "   - make debug_protocol : Run with protocol debug"
echo "   - make debug_full     : Run with full debug"
echo "   - make debug_info     : Show platform and configuration info"
echo "   - make analyze_logs   : Analyze all simulation logs for errors"
echo "   - make report         : Generate HTML simulation report"
echo ""

echo "8. ENHANCED DEBUG_INFO TARGET"
echo "   Shows:"
echo "   - VCS/UVM version information"
echo "   - Number of masters and slaves in configuration"
echo "   - Available test list"
echo "   - Debug level descriptions"
echo "   - Recent simulation history"
echo ""

echo "9. CONFIGURABLE PARAMETERS"
echo "   - TIMEOUT=value       : Simulation timeout (default: 1000000)"
echo "   - MAX_ERRORS=value    : Maximum error count (default: 10)"
echo "   - VERBOSITY=level     : UVM verbosity level"
echo "   - SEED=value          : Random seed"
echo ""

echo "10. LOG ANALYSIS"
echo "    Automatically counts:"
echo "    - UVM_ERROR occurrences"
echo "    - UVM_WARNING occurrences"
echo "    - UVM_FATAL occurrences"
echo ""

echo "==================================================================="
echo "Example Debug Commands:"
echo "==================================================================="
echo ""
echo "# Get debug information about the VIP"
echo "make debug_info"
echo ""
echo "# Run with full debug enabled"
echo "make debug_full TEST=axi4_qos_basic_priority_test"
echo ""
echo "# Run with transaction recording and waveform dump"
echo "make run TEST=axi4_stress_test DEBUG_LEVEL=2 TRANS_RECORD=1 DUMP_FSDB=1"
echo ""
echo "# Analyze logs after simulation"
echo "make analyze_logs"
echo ""
echo "# Run with performance monitoring"
echo "make run_perf TEST=axi4_qos_saturation_stress_test"
echo ""
echo "==================================================================="
echo "These features are now available in all generated VIP environments!"
echo "==================================================================="